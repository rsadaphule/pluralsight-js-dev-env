{"version":3,"sources":["webpack:///bundle.js","webpack:///webpack/bootstrap 17da7e08aaa2087eae80","webpack:///./src/index.js","webpack:///./src/api/userAPI.js","webpack:///./~/whatwg-fetch/fetch.js","webpack:///./src/api/baseUrl.js"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","global","_userAPI","getUsers","then","result","usersBody","forEach","user","firstName","lastName","email","document","getElementById","innerHTML","deleteLinks","getElementsByClassName","Array","from","link","onclick","event","element","target","console","log","preventDefault","attributes","value","deleteUser","row","parentNode","removeChild","this","_interopRequireDefault","obj","__esModule","default","get","del","url","request","Request","baseUrl","method","fetch","onSuccess","onError","response","json","error","Object","defineProperty","_baseUrl","_baseUrl2","self","normalizeName","name","String","test","TypeError","toLowerCase","normalizeValue","iteratorFor","items","iterator","next","shift","done","undefined","support","iterable","Symbol","Headers","headers","map","append","isArray","header","getOwnPropertyNames","consumed","body","bodyUsed","Promise","reject","fileReaderReady","reader","resolve","onload","onerror","readBlobAsArrayBuffer","blob","FileReader","promise","readAsArrayBuffer","readBlobAsText","readAsText","readArrayBufferAsText","buf","view","Uint8Array","chars","length","i","fromCharCode","join","bufferClone","slice","byteLength","set","buffer","Body","_initBody","_bodyInit","_bodyText","Blob","prototype","isPrototypeOf","_bodyBlob","formData","FormData","_bodyFormData","searchParams","URLSearchParams","toString","arrayBuffer","isDataView","_bodyArrayBuffer","ArrayBuffer","isArrayBufferView","Error","type","rejected","text","decode","JSON","parse","normalizeMethod","upcased","toUpperCase","methods","indexOf","input","options","credentials","mode","referrer","form","trim","split","bytes","replace","decodeURIComponent","parseHeaders","rawHeaders","line","parts","key","Response","bodyInit","status","ok","statusText","e","viewClasses","DataView","isView","oldValue","has","hasOwnProperty","callback","thisArg","keys","push","values","entries","clone","redirectStatuses","redirect","RangeError","location","init","xhr","XMLHttpRequest","getAllResponseHeaders","responseURL","responseText","ontimeout","open","withCredentials","responseType","setRequestHeader","send","polyfill","getBaseUrl","getQueryStringParameterByName"],"mappings":"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","file":"bundle.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"/\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = __webpack_require__(1);\n\n\n/***/ },\n/* 1 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(global) {'use strict';\n\t\n\tvar _userAPI = __webpack_require__(2);\n\t\n\t(0, _userAPI.getUsers)().then(function (result) {\n\t     var usersBody = \"\";\n\t\n\t     result.forEach(function (user) {\n\t\n\t          usersBody += '<tr>\\n                        <td><a href=\"#\" data-id=\"' + user.id + '\" class=\"deleteUser\">Delete</a></td>\\n                        <td>' + user.id + '</td>\\n                        <td>' + user.firstName + '</td>\\n                        <td>' + user.lastName + '</td>\\n                        <td>' + user.email + '</td>\\n                     </tr>';\n\t     });\n\t\n\t     global.document.getElementById('users').innerHTML = usersBody;\n\t\n\t     var deleteLinks = global.document.getElementsByClassName('deleteUser');\n\t\n\t     Array.from(deleteLinks, function (link) {\n\t          link.onclick = function (event) {\n\t               var element = event.target;\n\t               console.log('before prevent default'); // eslint-disable-line no-console\n\t               event.preventDefault();\n\t               console.log('after prevent default'); // eslint-disable-line no-console\n\t               console.log('USER ID ' + element.attributes[\"data-id\"].value); // eslint-disable-line no-console\n\t               (0, _userAPI.deleteUser)(element.attributes[\"data-id\"].value);\n\t               var row = element.parentNode.parentNode;\n\t               row.parentNode.removeChild(row);\n\t          };\n\t     });\n\t});\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ },\n/* 2 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.getUsers = getUsers;\n\texports.deleteUser = deleteUser;\n\t\n\t__webpack_require__(3);\n\t\n\tvar _baseUrl = __webpack_require__(4);\n\t\n\tvar _baseUrl2 = _interopRequireDefault(_baseUrl);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tvar baseUrl = (0, _baseUrl2.default)();\n\t\n\tfunction getUsers() {\n\t  return get('/users');\n\t}\n\t\n\tfunction deleteUser(id) {\n\t  return del('/user/' + id);\n\t}\n\t\n\tfunction del(url) {\n\t  var request = new Request(baseUrl + url, { method: 'DELETE' });\n\t  return fetch(request).then(onSuccess, onError);\n\t}\n\t\n\tfunction get(url) {\n\t\n\t  return fetch(baseUrl + url).then(onSuccess, onError);\n\t}\n\t\n\tfunction onSuccess(response) {\n\t  return response.json();\n\t}\n\t\n\tfunction onError(error) {\n\t  console.log(error); // eslint-disable-line no-console\n\t}\n\n/***/ },\n/* 3 */\n/***/ function(module, exports) {\n\n\t(function(self) {\n\t  'use strict';\n\t\n\t  if (self.fetch) {\n\t    return\n\t  }\n\t\n\t  var support = {\n\t    searchParams: 'URLSearchParams' in self,\n\t    iterable: 'Symbol' in self && 'iterator' in Symbol,\n\t    blob: 'FileReader' in self && 'Blob' in self && (function() {\n\t      try {\n\t        new Blob()\n\t        return true\n\t      } catch(e) {\n\t        return false\n\t      }\n\t    })(),\n\t    formData: 'FormData' in self,\n\t    arrayBuffer: 'ArrayBuffer' in self\n\t  }\n\t\n\t  if (support.arrayBuffer) {\n\t    var viewClasses = [\n\t      '[object Int8Array]',\n\t      '[object Uint8Array]',\n\t      '[object Uint8ClampedArray]',\n\t      '[object Int16Array]',\n\t      '[object Uint16Array]',\n\t      '[object Int32Array]',\n\t      '[object Uint32Array]',\n\t      '[object Float32Array]',\n\t      '[object Float64Array]'\n\t    ]\n\t\n\t    var isDataView = function(obj) {\n\t      return obj && DataView.prototype.isPrototypeOf(obj)\n\t    }\n\t\n\t    var isArrayBufferView = ArrayBuffer.isView || function(obj) {\n\t      return obj && viewClasses.indexOf(Object.prototype.toString.call(obj)) > -1\n\t    }\n\t  }\n\t\n\t  function normalizeName(name) {\n\t    if (typeof name !== 'string') {\n\t      name = String(name)\n\t    }\n\t    if (/[^a-z0-9\\-#$%&'*+.\\^_`|~]/i.test(name)) {\n\t      throw new TypeError('Invalid character in header field name')\n\t    }\n\t    return name.toLowerCase()\n\t  }\n\t\n\t  function normalizeValue(value) {\n\t    if (typeof value !== 'string') {\n\t      value = String(value)\n\t    }\n\t    return value\n\t  }\n\t\n\t  // Build a destructive iterator for the value list\n\t  function iteratorFor(items) {\n\t    var iterator = {\n\t      next: function() {\n\t        var value = items.shift()\n\t        return {done: value === undefined, value: value}\n\t      }\n\t    }\n\t\n\t    if (support.iterable) {\n\t      iterator[Symbol.iterator] = function() {\n\t        return iterator\n\t      }\n\t    }\n\t\n\t    return iterator\n\t  }\n\t\n\t  function Headers(headers) {\n\t    this.map = {}\n\t\n\t    if (headers instanceof Headers) {\n\t      headers.forEach(function(value, name) {\n\t        this.append(name, value)\n\t      }, this)\n\t    } else if (Array.isArray(headers)) {\n\t      headers.forEach(function(header) {\n\t        this.append(header[0], header[1])\n\t      }, this)\n\t    } else if (headers) {\n\t      Object.getOwnPropertyNames(headers).forEach(function(name) {\n\t        this.append(name, headers[name])\n\t      }, this)\n\t    }\n\t  }\n\t\n\t  Headers.prototype.append = function(name, value) {\n\t    name = normalizeName(name)\n\t    value = normalizeValue(value)\n\t    var oldValue = this.map[name]\n\t    this.map[name] = oldValue ? oldValue+','+value : value\n\t  }\n\t\n\t  Headers.prototype['delete'] = function(name) {\n\t    delete this.map[normalizeName(name)]\n\t  }\n\t\n\t  Headers.prototype.get = function(name) {\n\t    name = normalizeName(name)\n\t    return this.has(name) ? this.map[name] : null\n\t  }\n\t\n\t  Headers.prototype.has = function(name) {\n\t    return this.map.hasOwnProperty(normalizeName(name))\n\t  }\n\t\n\t  Headers.prototype.set = function(name, value) {\n\t    this.map[normalizeName(name)] = normalizeValue(value)\n\t  }\n\t\n\t  Headers.prototype.forEach = function(callback, thisArg) {\n\t    for (var name in this.map) {\n\t      if (this.map.hasOwnProperty(name)) {\n\t        callback.call(thisArg, this.map[name], name, this)\n\t      }\n\t    }\n\t  }\n\t\n\t  Headers.prototype.keys = function() {\n\t    var items = []\n\t    this.forEach(function(value, name) { items.push(name) })\n\t    return iteratorFor(items)\n\t  }\n\t\n\t  Headers.prototype.values = function() {\n\t    var items = []\n\t    this.forEach(function(value) { items.push(value) })\n\t    return iteratorFor(items)\n\t  }\n\t\n\t  Headers.prototype.entries = function() {\n\t    var items = []\n\t    this.forEach(function(value, name) { items.push([name, value]) })\n\t    return iteratorFor(items)\n\t  }\n\t\n\t  if (support.iterable) {\n\t    Headers.prototype[Symbol.iterator] = Headers.prototype.entries\n\t  }\n\t\n\t  function consumed(body) {\n\t    if (body.bodyUsed) {\n\t      return Promise.reject(new TypeError('Already read'))\n\t    }\n\t    body.bodyUsed = true\n\t  }\n\t\n\t  function fileReaderReady(reader) {\n\t    return new Promise(function(resolve, reject) {\n\t      reader.onload = function() {\n\t        resolve(reader.result)\n\t      }\n\t      reader.onerror = function() {\n\t        reject(reader.error)\n\t      }\n\t    })\n\t  }\n\t\n\t  function readBlobAsArrayBuffer(blob) {\n\t    var reader = new FileReader()\n\t    var promise = fileReaderReady(reader)\n\t    reader.readAsArrayBuffer(blob)\n\t    return promise\n\t  }\n\t\n\t  function readBlobAsText(blob) {\n\t    var reader = new FileReader()\n\t    var promise = fileReaderReady(reader)\n\t    reader.readAsText(blob)\n\t    return promise\n\t  }\n\t\n\t  function readArrayBufferAsText(buf) {\n\t    var view = new Uint8Array(buf)\n\t    var chars = new Array(view.length)\n\t\n\t    for (var i = 0; i < view.length; i++) {\n\t      chars[i] = String.fromCharCode(view[i])\n\t    }\n\t    return chars.join('')\n\t  }\n\t\n\t  function bufferClone(buf) {\n\t    if (buf.slice) {\n\t      return buf.slice(0)\n\t    } else {\n\t      var view = new Uint8Array(buf.byteLength)\n\t      view.set(new Uint8Array(buf))\n\t      return view.buffer\n\t    }\n\t  }\n\t\n\t  function Body() {\n\t    this.bodyUsed = false\n\t\n\t    this._initBody = function(body) {\n\t      this._bodyInit = body\n\t      if (!body) {\n\t        this._bodyText = ''\n\t      } else if (typeof body === 'string') {\n\t        this._bodyText = body\n\t      } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\n\t        this._bodyBlob = body\n\t      } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\n\t        this._bodyFormData = body\n\t      } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n\t        this._bodyText = body.toString()\n\t      } else if (support.arrayBuffer && support.blob && isDataView(body)) {\n\t        this._bodyArrayBuffer = bufferClone(body.buffer)\n\t        // IE 10-11 can't handle a DataView body.\n\t        this._bodyInit = new Blob([this._bodyArrayBuffer])\n\t      } else if (support.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(body) || isArrayBufferView(body))) {\n\t        this._bodyArrayBuffer = bufferClone(body)\n\t      } else {\n\t        throw new Error('unsupported BodyInit type')\n\t      }\n\t\n\t      if (!this.headers.get('content-type')) {\n\t        if (typeof body === 'string') {\n\t          this.headers.set('content-type', 'text/plain;charset=UTF-8')\n\t        } else if (this._bodyBlob && this._bodyBlob.type) {\n\t          this.headers.set('content-type', this._bodyBlob.type)\n\t        } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n\t          this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8')\n\t        }\n\t      }\n\t    }\n\t\n\t    if (support.blob) {\n\t      this.blob = function() {\n\t        var rejected = consumed(this)\n\t        if (rejected) {\n\t          return rejected\n\t        }\n\t\n\t        if (this._bodyBlob) {\n\t          return Promise.resolve(this._bodyBlob)\n\t        } else if (this._bodyArrayBuffer) {\n\t          return Promise.resolve(new Blob([this._bodyArrayBuffer]))\n\t        } else if (this._bodyFormData) {\n\t          throw new Error('could not read FormData body as blob')\n\t        } else {\n\t          return Promise.resolve(new Blob([this._bodyText]))\n\t        }\n\t      }\n\t\n\t      this.arrayBuffer = function() {\n\t        if (this._bodyArrayBuffer) {\n\t          return consumed(this) || Promise.resolve(this._bodyArrayBuffer)\n\t        } else {\n\t          return this.blob().then(readBlobAsArrayBuffer)\n\t        }\n\t      }\n\t    }\n\t\n\t    this.text = function() {\n\t      var rejected = consumed(this)\n\t      if (rejected) {\n\t        return rejected\n\t      }\n\t\n\t      if (this._bodyBlob) {\n\t        return readBlobAsText(this._bodyBlob)\n\t      } else if (this._bodyArrayBuffer) {\n\t        return Promise.resolve(readArrayBufferAsText(this._bodyArrayBuffer))\n\t      } else if (this._bodyFormData) {\n\t        throw new Error('could not read FormData body as text')\n\t      } else {\n\t        return Promise.resolve(this._bodyText)\n\t      }\n\t    }\n\t\n\t    if (support.formData) {\n\t      this.formData = function() {\n\t        return this.text().then(decode)\n\t      }\n\t    }\n\t\n\t    this.json = function() {\n\t      return this.text().then(JSON.parse)\n\t    }\n\t\n\t    return this\n\t  }\n\t\n\t  // HTTP methods whose capitalization should be normalized\n\t  var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT']\n\t\n\t  function normalizeMethod(method) {\n\t    var upcased = method.toUpperCase()\n\t    return (methods.indexOf(upcased) > -1) ? upcased : method\n\t  }\n\t\n\t  function Request(input, options) {\n\t    options = options || {}\n\t    var body = options.body\n\t\n\t    if (input instanceof Request) {\n\t      if (input.bodyUsed) {\n\t        throw new TypeError('Already read')\n\t      }\n\t      this.url = input.url\n\t      this.credentials = input.credentials\n\t      if (!options.headers) {\n\t        this.headers = new Headers(input.headers)\n\t      }\n\t      this.method = input.method\n\t      this.mode = input.mode\n\t      if (!body && input._bodyInit != null) {\n\t        body = input._bodyInit\n\t        input.bodyUsed = true\n\t      }\n\t    } else {\n\t      this.url = String(input)\n\t    }\n\t\n\t    this.credentials = options.credentials || this.credentials || 'omit'\n\t    if (options.headers || !this.headers) {\n\t      this.headers = new Headers(options.headers)\n\t    }\n\t    this.method = normalizeMethod(options.method || this.method || 'GET')\n\t    this.mode = options.mode || this.mode || null\n\t    this.referrer = null\n\t\n\t    if ((this.method === 'GET' || this.method === 'HEAD') && body) {\n\t      throw new TypeError('Body not allowed for GET or HEAD requests')\n\t    }\n\t    this._initBody(body)\n\t  }\n\t\n\t  Request.prototype.clone = function() {\n\t    return new Request(this, { body: this._bodyInit })\n\t  }\n\t\n\t  function decode(body) {\n\t    var form = new FormData()\n\t    body.trim().split('&').forEach(function(bytes) {\n\t      if (bytes) {\n\t        var split = bytes.split('=')\n\t        var name = split.shift().replace(/\\+/g, ' ')\n\t        var value = split.join('=').replace(/\\+/g, ' ')\n\t        form.append(decodeURIComponent(name), decodeURIComponent(value))\n\t      }\n\t    })\n\t    return form\n\t  }\n\t\n\t  function parseHeaders(rawHeaders) {\n\t    var headers = new Headers()\n\t    rawHeaders.split(/\\r?\\n/).forEach(function(line) {\n\t      var parts = line.split(':')\n\t      var key = parts.shift().trim()\n\t      if (key) {\n\t        var value = parts.join(':').trim()\n\t        headers.append(key, value)\n\t      }\n\t    })\n\t    return headers\n\t  }\n\t\n\t  Body.call(Request.prototype)\n\t\n\t  function Response(bodyInit, options) {\n\t    if (!options) {\n\t      options = {}\n\t    }\n\t\n\t    this.type = 'default'\n\t    this.status = 'status' in options ? options.status : 200\n\t    this.ok = this.status >= 200 && this.status < 300\n\t    this.statusText = 'statusText' in options ? options.statusText : 'OK'\n\t    this.headers = new Headers(options.headers)\n\t    this.url = options.url || ''\n\t    this._initBody(bodyInit)\n\t  }\n\t\n\t  Body.call(Response.prototype)\n\t\n\t  Response.prototype.clone = function() {\n\t    return new Response(this._bodyInit, {\n\t      status: this.status,\n\t      statusText: this.statusText,\n\t      headers: new Headers(this.headers),\n\t      url: this.url\n\t    })\n\t  }\n\t\n\t  Response.error = function() {\n\t    var response = new Response(null, {status: 0, statusText: ''})\n\t    response.type = 'error'\n\t    return response\n\t  }\n\t\n\t  var redirectStatuses = [301, 302, 303, 307, 308]\n\t\n\t  Response.redirect = function(url, status) {\n\t    if (redirectStatuses.indexOf(status) === -1) {\n\t      throw new RangeError('Invalid status code')\n\t    }\n\t\n\t    return new Response(null, {status: status, headers: {location: url}})\n\t  }\n\t\n\t  self.Headers = Headers\n\t  self.Request = Request\n\t  self.Response = Response\n\t\n\t  self.fetch = function(input, init) {\n\t    return new Promise(function(resolve, reject) {\n\t      var request = new Request(input, init)\n\t      var xhr = new XMLHttpRequest()\n\t\n\t      xhr.onload = function() {\n\t        var options = {\n\t          status: xhr.status,\n\t          statusText: xhr.statusText,\n\t          headers: parseHeaders(xhr.getAllResponseHeaders() || '')\n\t        }\n\t        options.url = 'responseURL' in xhr ? xhr.responseURL : options.headers.get('X-Request-URL')\n\t        var body = 'response' in xhr ? xhr.response : xhr.responseText\n\t        resolve(new Response(body, options))\n\t      }\n\t\n\t      xhr.onerror = function() {\n\t        reject(new TypeError('Network request failed'))\n\t      }\n\t\n\t      xhr.ontimeout = function() {\n\t        reject(new TypeError('Network request failed'))\n\t      }\n\t\n\t      xhr.open(request.method, request.url, true)\n\t\n\t      if (request.credentials === 'include') {\n\t        xhr.withCredentials = true\n\t      }\n\t\n\t      if ('responseType' in xhr && support.blob) {\n\t        xhr.responseType = 'blob'\n\t      }\n\t\n\t      request.headers.forEach(function(value, name) {\n\t        xhr.setRequestHeader(name, value)\n\t      })\n\t\n\t      xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit)\n\t    })\n\t  }\n\t  self.fetch.polyfill = true\n\t})(typeof self !== 'undefined' ? self : this);\n\n\n/***/ },\n/* 4 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\texports.default = getBaseUrl;\n\tfunction getBaseUrl() {\n\t\n\t    console.log('Is Mock: ' + getQueryStringParameterByName('useMockApi')); // eslint-disable-line no-console\n\t    return getQueryStringParameterByName('useMockApi') ? 'http://localhost:3001' : 'http://localhost:3000';\n\t}\n\t\n\tfunction getQueryStringParameterByName(name) {\n\t    name = \"\";\n\t    console.log('Is Mock: ' + name); // eslint-disable-line no-console\n\t    return false;\n\t}\n\n/***/ }\n/******/ ]);\n\n\n/** WEBPACK FOOTER **\n ** bundle.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 17da7e08aaa2087eae80\n **/","\nimport {getUsers, deleteUser} from './api/userAPI';\n\n\n\ngetUsers().then(result => {\n    let usersBody = \"\";\n\n     result.forEach(user => {\n\n      usersBody += `<tr>\n                        <td><a href=\"#\" data-id=\"${user.id}\" class=\"deleteUser\">Delete</a></td>\n                        <td>${user.id}</td>\n                        <td>${user.firstName}</td>\n                        <td>${user.lastName}</td>\n                        <td>${user.email}</td>\n                     </tr>`;\n     });\n\n\n      global.document.getElementById('users').innerHTML = usersBody;\n\n      const deleteLinks = global.document.getElementsByClassName('deleteUser');\n      \n      Array.from(deleteLinks, link => {\n           link.onclick = function(event){\n                const element = event.target;\n                console.log('before prevent default'); // eslint-disable-line no-console\n                event.preventDefault();\n                console.log('after prevent default'); // eslint-disable-line no-console\n                console.log('USER ID ' + element.attributes[\"data-id\"].value); // eslint-disable-line no-console\n                deleteUser(element.attributes[\"data-id\"].value);\n                const row = element.parentNode.parentNode;\n                row.parentNode.removeChild(row);    \n           };\n        \n      });\n\n \n});\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/index.js\n **/","import 'whatwg-fetch';\nimport getBaseUrl from './baseUrl.js';\n\nconst baseUrl = getBaseUrl();\n\nexport function getUsers()\n{\n  return get('/users');\n}\n\nexport function deleteUser(id)\n{\n  return del(`/user/${id}`);\n}\n\nfunction del(url)\n{\n  const request = new Request(baseUrl + url, {method : 'DELETE'});\n  return fetch(request).then(onSuccess, onError);\n}\n\n\nfunction get(url){\n\n  return fetch(baseUrl + url).then(onSuccess, onError);\n  \n}\n\nfunction onSuccess(response)\n{\n   return response.json();\n}\n\nfunction onError(error)\n{\n  console.log(error); // eslint-disable-line no-console\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/api/userAPI.js\n **/","(function(self) {\n  'use strict';\n\n  if (self.fetch) {\n    return\n  }\n\n  var support = {\n    searchParams: 'URLSearchParams' in self,\n    iterable: 'Symbol' in self && 'iterator' in Symbol,\n    blob: 'FileReader' in self && 'Blob' in self && (function() {\n      try {\n        new Blob()\n        return true\n      } catch(e) {\n        return false\n      }\n    })(),\n    formData: 'FormData' in self,\n    arrayBuffer: 'ArrayBuffer' in self\n  }\n\n  if (support.arrayBuffer) {\n    var viewClasses = [\n      '[object Int8Array]',\n      '[object Uint8Array]',\n      '[object Uint8ClampedArray]',\n      '[object Int16Array]',\n      '[object Uint16Array]',\n      '[object Int32Array]',\n      '[object Uint32Array]',\n      '[object Float32Array]',\n      '[object Float64Array]'\n    ]\n\n    var isDataView = function(obj) {\n      return obj && DataView.prototype.isPrototypeOf(obj)\n    }\n\n    var isArrayBufferView = ArrayBuffer.isView || function(obj) {\n      return obj && viewClasses.indexOf(Object.prototype.toString.call(obj)) > -1\n    }\n  }\n\n  function normalizeName(name) {\n    if (typeof name !== 'string') {\n      name = String(name)\n    }\n    if (/[^a-z0-9\\-#$%&'*+.\\^_`|~]/i.test(name)) {\n      throw new TypeError('Invalid character in header field name')\n    }\n    return name.toLowerCase()\n  }\n\n  function normalizeValue(value) {\n    if (typeof value !== 'string') {\n      value = String(value)\n    }\n    return value\n  }\n\n  // Build a destructive iterator for the value list\n  function iteratorFor(items) {\n    var iterator = {\n      next: function() {\n        var value = items.shift()\n        return {done: value === undefined, value: value}\n      }\n    }\n\n    if (support.iterable) {\n      iterator[Symbol.iterator] = function() {\n        return iterator\n      }\n    }\n\n    return iterator\n  }\n\n  function Headers(headers) {\n    this.map = {}\n\n    if (headers instanceof Headers) {\n      headers.forEach(function(value, name) {\n        this.append(name, value)\n      }, this)\n    } else if (Array.isArray(headers)) {\n      headers.forEach(function(header) {\n        this.append(header[0], header[1])\n      }, this)\n    } else if (headers) {\n      Object.getOwnPropertyNames(headers).forEach(function(name) {\n        this.append(name, headers[name])\n      }, this)\n    }\n  }\n\n  Headers.prototype.append = function(name, value) {\n    name = normalizeName(name)\n    value = normalizeValue(value)\n    var oldValue = this.map[name]\n    this.map[name] = oldValue ? oldValue+','+value : value\n  }\n\n  Headers.prototype['delete'] = function(name) {\n    delete this.map[normalizeName(name)]\n  }\n\n  Headers.prototype.get = function(name) {\n    name = normalizeName(name)\n    return this.has(name) ? this.map[name] : null\n  }\n\n  Headers.prototype.has = function(name) {\n    return this.map.hasOwnProperty(normalizeName(name))\n  }\n\n  Headers.prototype.set = function(name, value) {\n    this.map[normalizeName(name)] = normalizeValue(value)\n  }\n\n  Headers.prototype.forEach = function(callback, thisArg) {\n    for (var name in this.map) {\n      if (this.map.hasOwnProperty(name)) {\n        callback.call(thisArg, this.map[name], name, this)\n      }\n    }\n  }\n\n  Headers.prototype.keys = function() {\n    var items = []\n    this.forEach(function(value, name) { items.push(name) })\n    return iteratorFor(items)\n  }\n\n  Headers.prototype.values = function() {\n    var items = []\n    this.forEach(function(value) { items.push(value) })\n    return iteratorFor(items)\n  }\n\n  Headers.prototype.entries = function() {\n    var items = []\n    this.forEach(function(value, name) { items.push([name, value]) })\n    return iteratorFor(items)\n  }\n\n  if (support.iterable) {\n    Headers.prototype[Symbol.iterator] = Headers.prototype.entries\n  }\n\n  function consumed(body) {\n    if (body.bodyUsed) {\n      return Promise.reject(new TypeError('Already read'))\n    }\n    body.bodyUsed = true\n  }\n\n  function fileReaderReady(reader) {\n    return new Promise(function(resolve, reject) {\n      reader.onload = function() {\n        resolve(reader.result)\n      }\n      reader.onerror = function() {\n        reject(reader.error)\n      }\n    })\n  }\n\n  function readBlobAsArrayBuffer(blob) {\n    var reader = new FileReader()\n    var promise = fileReaderReady(reader)\n    reader.readAsArrayBuffer(blob)\n    return promise\n  }\n\n  function readBlobAsText(blob) {\n    var reader = new FileReader()\n    var promise = fileReaderReady(reader)\n    reader.readAsText(blob)\n    return promise\n  }\n\n  function readArrayBufferAsText(buf) {\n    var view = new Uint8Array(buf)\n    var chars = new Array(view.length)\n\n    for (var i = 0; i < view.length; i++) {\n      chars[i] = String.fromCharCode(view[i])\n    }\n    return chars.join('')\n  }\n\n  function bufferClone(buf) {\n    if (buf.slice) {\n      return buf.slice(0)\n    } else {\n      var view = new Uint8Array(buf.byteLength)\n      view.set(new Uint8Array(buf))\n      return view.buffer\n    }\n  }\n\n  function Body() {\n    this.bodyUsed = false\n\n    this._initBody = function(body) {\n      this._bodyInit = body\n      if (!body) {\n        this._bodyText = ''\n      } else if (typeof body === 'string') {\n        this._bodyText = body\n      } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\n        this._bodyBlob = body\n      } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\n        this._bodyFormData = body\n      } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n        this._bodyText = body.toString()\n      } else if (support.arrayBuffer && support.blob && isDataView(body)) {\n        this._bodyArrayBuffer = bufferClone(body.buffer)\n        // IE 10-11 can't handle a DataView body.\n        this._bodyInit = new Blob([this._bodyArrayBuffer])\n      } else if (support.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(body) || isArrayBufferView(body))) {\n        this._bodyArrayBuffer = bufferClone(body)\n      } else {\n        throw new Error('unsupported BodyInit type')\n      }\n\n      if (!this.headers.get('content-type')) {\n        if (typeof body === 'string') {\n          this.headers.set('content-type', 'text/plain;charset=UTF-8')\n        } else if (this._bodyBlob && this._bodyBlob.type) {\n          this.headers.set('content-type', this._bodyBlob.type)\n        } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n          this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8')\n        }\n      }\n    }\n\n    if (support.blob) {\n      this.blob = function() {\n        var rejected = consumed(this)\n        if (rejected) {\n          return rejected\n        }\n\n        if (this._bodyBlob) {\n          return Promise.resolve(this._bodyBlob)\n        } else if (this._bodyArrayBuffer) {\n          return Promise.resolve(new Blob([this._bodyArrayBuffer]))\n        } else if (this._bodyFormData) {\n          throw new Error('could not read FormData body as blob')\n        } else {\n          return Promise.resolve(new Blob([this._bodyText]))\n        }\n      }\n\n      this.arrayBuffer = function() {\n        if (this._bodyArrayBuffer) {\n          return consumed(this) || Promise.resolve(this._bodyArrayBuffer)\n        } else {\n          return this.blob().then(readBlobAsArrayBuffer)\n        }\n      }\n    }\n\n    this.text = function() {\n      var rejected = consumed(this)\n      if (rejected) {\n        return rejected\n      }\n\n      if (this._bodyBlob) {\n        return readBlobAsText(this._bodyBlob)\n      } else if (this._bodyArrayBuffer) {\n        return Promise.resolve(readArrayBufferAsText(this._bodyArrayBuffer))\n      } else if (this._bodyFormData) {\n        throw new Error('could not read FormData body as text')\n      } else {\n        return Promise.resolve(this._bodyText)\n      }\n    }\n\n    if (support.formData) {\n      this.formData = function() {\n        return this.text().then(decode)\n      }\n    }\n\n    this.json = function() {\n      return this.text().then(JSON.parse)\n    }\n\n    return this\n  }\n\n  // HTTP methods whose capitalization should be normalized\n  var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT']\n\n  function normalizeMethod(method) {\n    var upcased = method.toUpperCase()\n    return (methods.indexOf(upcased) > -1) ? upcased : method\n  }\n\n  function Request(input, options) {\n    options = options || {}\n    var body = options.body\n\n    if (input instanceof Request) {\n      if (input.bodyUsed) {\n        throw new TypeError('Already read')\n      }\n      this.url = input.url\n      this.credentials = input.credentials\n      if (!options.headers) {\n        this.headers = new Headers(input.headers)\n      }\n      this.method = input.method\n      this.mode = input.mode\n      if (!body && input._bodyInit != null) {\n        body = input._bodyInit\n        input.bodyUsed = true\n      }\n    } else {\n      this.url = String(input)\n    }\n\n    this.credentials = options.credentials || this.credentials || 'omit'\n    if (options.headers || !this.headers) {\n      this.headers = new Headers(options.headers)\n    }\n    this.method = normalizeMethod(options.method || this.method || 'GET')\n    this.mode = options.mode || this.mode || null\n    this.referrer = null\n\n    if ((this.method === 'GET' || this.method === 'HEAD') && body) {\n      throw new TypeError('Body not allowed for GET or HEAD requests')\n    }\n    this._initBody(body)\n  }\n\n  Request.prototype.clone = function() {\n    return new Request(this, { body: this._bodyInit })\n  }\n\n  function decode(body) {\n    var form = new FormData()\n    body.trim().split('&').forEach(function(bytes) {\n      if (bytes) {\n        var split = bytes.split('=')\n        var name = split.shift().replace(/\\+/g, ' ')\n        var value = split.join('=').replace(/\\+/g, ' ')\n        form.append(decodeURIComponent(name), decodeURIComponent(value))\n      }\n    })\n    return form\n  }\n\n  function parseHeaders(rawHeaders) {\n    var headers = new Headers()\n    rawHeaders.split(/\\r?\\n/).forEach(function(line) {\n      var parts = line.split(':')\n      var key = parts.shift().trim()\n      if (key) {\n        var value = parts.join(':').trim()\n        headers.append(key, value)\n      }\n    })\n    return headers\n  }\n\n  Body.call(Request.prototype)\n\n  function Response(bodyInit, options) {\n    if (!options) {\n      options = {}\n    }\n\n    this.type = 'default'\n    this.status = 'status' in options ? options.status : 200\n    this.ok = this.status >= 200 && this.status < 300\n    this.statusText = 'statusText' in options ? options.statusText : 'OK'\n    this.headers = new Headers(options.headers)\n    this.url = options.url || ''\n    this._initBody(bodyInit)\n  }\n\n  Body.call(Response.prototype)\n\n  Response.prototype.clone = function() {\n    return new Response(this._bodyInit, {\n      status: this.status,\n      statusText: this.statusText,\n      headers: new Headers(this.headers),\n      url: this.url\n    })\n  }\n\n  Response.error = function() {\n    var response = new Response(null, {status: 0, statusText: ''})\n    response.type = 'error'\n    return response\n  }\n\n  var redirectStatuses = [301, 302, 303, 307, 308]\n\n  Response.redirect = function(url, status) {\n    if (redirectStatuses.indexOf(status) === -1) {\n      throw new RangeError('Invalid status code')\n    }\n\n    return new Response(null, {status: status, headers: {location: url}})\n  }\n\n  self.Headers = Headers\n  self.Request = Request\n  self.Response = Response\n\n  self.fetch = function(input, init) {\n    return new Promise(function(resolve, reject) {\n      var request = new Request(input, init)\n      var xhr = new XMLHttpRequest()\n\n      xhr.onload = function() {\n        var options = {\n          status: xhr.status,\n          statusText: xhr.statusText,\n          headers: parseHeaders(xhr.getAllResponseHeaders() || '')\n        }\n        options.url = 'responseURL' in xhr ? xhr.responseURL : options.headers.get('X-Request-URL')\n        var body = 'response' in xhr ? xhr.response : xhr.responseText\n        resolve(new Response(body, options))\n      }\n\n      xhr.onerror = function() {\n        reject(new TypeError('Network request failed'))\n      }\n\n      xhr.ontimeout = function() {\n        reject(new TypeError('Network request failed'))\n      }\n\n      xhr.open(request.method, request.url, true)\n\n      if (request.credentials === 'include') {\n        xhr.withCredentials = true\n      }\n\n      if ('responseType' in xhr && support.blob) {\n        xhr.responseType = 'blob'\n      }\n\n      request.headers.forEach(function(value, name) {\n        xhr.setRequestHeader(name, value)\n      })\n\n      xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit)\n    })\n  }\n  self.fetch.polyfill = true\n})(typeof self !== 'undefined' ? self : this);\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/whatwg-fetch/fetch.js\n ** module id = 3\n ** module chunks = 0\n **/","export default function getBaseUrl() {\n    \n    console.log('Is Mock: ' + getQueryStringParameterByName('useMockApi')); // eslint-disable-line no-console\n    return getQueryStringParameterByName('useMockApi') ? 'http://localhost:3001' : 'http://localhost:3000';\n  \n}\n\n\nfunction getQueryStringParameterByName(name)\n{\n   name = \"\";\n   console.log('Is Mock: ' + name); // eslint-disable-line no-console\n   return false;\n    \n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/api/baseUrl.js\n **/"],"sourceRoot":""}